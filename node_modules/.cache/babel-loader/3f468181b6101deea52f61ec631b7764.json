{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Flow } from 'three-stdlib';\nvar CurveModifier = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    curve = _ref.curve;\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    object3D = _React$useState2[0],\n    setObj = _React$useState2[1];\n  var original = React.useRef();\n  var modifier = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      moveAlongCurve: function moveAlongCurve(val) {\n        var _modifier$current;\n        (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.moveAlongCurve(val);\n      }\n    };\n  });\n  React.useEffect(function () {\n    if (!modifier.current && original.current && ref) {\n      modifier.current = new Flow(original.current);\n      setObj(modifier.current.object3D);\n    }\n  }, [children, ref]);\n  React.useEffect(function () {\n    if (original.current && curve) {\n      var _modifier$current2;\n      (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.updateCurve(0, curve);\n    }\n  }, [curve]);\n  return object3D ? /*#__PURE__*/React.createElement(\"primitive\", {\n    object: object3D\n  }) : /*#__PURE__*/React.cloneElement(React.Children.only(children), {\n    ref: original\n  });\n});\nexport { CurveModifier };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\nfunction useCamera(camera, props) {\n  var mouse = useThree(function (state) {\n    return state.mouse;\n  });\n  var _React$useState = React.useState(function () {\n      var raycaster = new Raycaster();\n      /**\n       * applyProps is an internal method of r3f and\n       * therefore requires its first arg to be an\n       * \"Instance\" a term used with the Reconciler\n       * so we have an expect error to mask this\n       */\n      // @ts-expect-error\n\n      if (props) applyProps(raycaster, props, {});\n      return function (_, intersects) {\n        raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n        var rc = this.constructor.prototype.raycast.bind(this);\n        if (rc) rc(raycaster, intersects);\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    raycast = _React$useState2[0];\n  return raycast;\n}\nexport { useCamera };","map":null,"metadata":{},"sourceType":"module"}
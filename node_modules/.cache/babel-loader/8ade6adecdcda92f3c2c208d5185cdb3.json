{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Node from './Node.js';\nvar PropertyNode = /*#__PURE__*/function (_Node) {\n  _inherits(PropertyNode, _Node);\n  function PropertyNode() {\n    var _this;\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'vec4';\n    _classCallCheck(this, PropertyNode);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyNode).call(this, nodeType));\n    _this.name = name;\n    return _this;\n  }\n  _createClass(PropertyNode, [{\n    key: \"getHash\",\n    value: function getHash(builder) {\n      return this.name || _get(_getPrototypeOf(PropertyNode.prototype), \"getHash\", this).call(this, builder);\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var nodeVary = builder.getVarFromNode(this, this.getNodeType(builder));\n      var name = this.name;\n      if (name !== null) {\n        nodeVary.name = name;\n      }\n      return builder.getPropertyName(nodeVary);\n    }\n  }]);\n  return PropertyNode;\n}(Node);\nexport default PropertyNode;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nvar OrthographicCamera = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var makeDefault = _ref.makeDefault,\n    manual = _ref.manual,\n    props = _objectWithoutProperties(_ref, [\"makeDefault\", \"manual\"]);\n  var set = useThree(function (_ref2) {\n    var set = _ref2.set;\n    return set;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var size = useThree(function (_ref4) {\n    var size = _ref4.size;\n    return size;\n  });\n  var cameraRef = React.useRef();\n  React.useLayoutEffect(function () {\n    if (cameraRef.current && !manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(function () {\n    if (makeDefault && cameraRef.current) {\n      var oldCam = camera;\n      set(function () {\n        return {\n          camera: cameraRef.current\n        };\n      });\n      return function () {\n        return set(function () {\n          return {\n            camera: oldCam\n          };\n        });\n      };\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\nexport { OrthographicCamera };","map":null,"metadata":{},"sourceType":"module"}
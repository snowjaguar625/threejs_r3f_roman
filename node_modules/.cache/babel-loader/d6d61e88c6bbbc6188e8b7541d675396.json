{"ast":null,"code":"import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nvar DepthBuffer = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 256 : _ref$size;\n  var dpr = useThree(function (state) {\n    return state.viewport.dpr;\n  });\n  var _useThree = useThree(function (state) {\n      return state.size;\n    }),\n    width = _useThree.width,\n    height = _useThree.height;\n  var w = size || width * dpr;\n  var h = size || height * dpr;\n  var depthConfig = React.useMemo(function () {\n    var depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture: depthTexture\n    };\n  }, [w, h]);\n  var depthFBO = useFBO(w, h, depthConfig);\n  React.useImperativeHandle(ref, function () {\n    return depthFBO == null ? void 0 : depthFBO.depthTexture;\n  });\n  return useFrame(function (state) {\n    state.gl.setRenderTarget(depthFBO);\n    state.gl.render(state.scene, state.camera);\n    state.gl.setRenderTarget(null);\n  });\n});\nexport { DepthBuffer };","map":null,"metadata":{},"sourceType":"module"}
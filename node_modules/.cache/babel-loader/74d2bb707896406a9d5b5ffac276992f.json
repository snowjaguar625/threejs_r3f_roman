{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1 } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\n\n// eslint-disable-next-line prettier/prettier\nvar Text = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$anchorX = _ref.anchorX,\n    anchorX = _ref$anchorX === void 0 ? 'center' : _ref$anchorX,\n    _ref$anchorY = _ref.anchorY,\n    anchorY = _ref$anchorY === void 0 ? 'middle' : _ref$anchorY,\n    children = _ref.children,\n    onSync = _ref.onSync,\n    props = _objectWithoutProperties(_ref, [\"anchorX\", \"anchorY\", \"children\", \"onSync\"]);\n  var invalidate = useThree(function (_ref2) {\n    var invalidate = _ref2.invalidate;\n    return invalidate;\n  });\n  var _React$useState = React.useState(function () {\n      return new Text$1();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    troikaMesh = _React$useState2[0];\n  var _React$useMemo = React.useMemo(function () {\n      var n = [];\n      var t = '';\n      React.Children.forEach(children, function (child) {\n        if (typeof child === 'string' || typeof child === 'number') {\n          t += child;\n        } else {\n          n.push(child);\n        }\n      });\n      return [n, t];\n    }, [children]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    nodes = _React$useMemo2[0],\n    text = _React$useMemo2[1];\n  React.useLayoutEffect(function () {\n    return void troikaMesh.sync(function () {\n      invalidate();\n      if (onSync) onSync(troikaMesh);\n    });\n  });\n  React.useEffect(function () {\n    return function () {\n      return troikaMesh.dispose();\n    };\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\nexport { Text };","map":null,"metadata":{},"sourceType":"module"}
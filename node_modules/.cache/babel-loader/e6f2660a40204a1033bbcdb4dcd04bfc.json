{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport { WebGLCubeRenderTarget, LinearFilter, RGBFormat } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nfunction CubeCamera(_ref) {\n  var children = _ref.children,\n    fog = _ref.fog,\n    _ref$frames = _ref.frames,\n    frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n    _ref$near = _ref.near,\n    near = _ref$near === void 0 ? 1 : _ref$near,\n    _ref$far = _ref.far,\n    far = _ref$far === void 0 ? 1000 : _ref$far,\n    props = _objectWithoutProperties(_ref, [\"children\", \"fog\", \"frames\", \"resolution\", \"near\", \"far\"]);\n  var ref = React.useRef();\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    camera = _React$useState2[0],\n    setCamera = _React$useState2[1];\n  var scene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var fbo = React.useMemo(function () {\n    return new WebGLCubeRenderTarget(resolution, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [resolution]);\n  var count = 0;\n  useFrame(function () {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(function (obj) {\n        return obj.visible = false;\n      });\n      var originalFog = scene.fog;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(function (obj) {\n        return obj.visible = true;\n      });\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\nexport { CubeCamera };","map":null,"metadata":{},"sourceType":"module"}
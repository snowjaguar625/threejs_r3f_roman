{"ast":null,"code":"/**\n * Vignette shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\nvar VignetteShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    offset: {\n      value: 1.0\n    },\n    darkness: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float offset;', 'uniform float darkness;', 'uniform sampler2D tDiffuse;', 'varying vec2 vUv;', 'void main() {',\n  // Eskil's vignette\n  '\tvec4 texel = texture2D( tDiffuse, vUv );', '\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );', '\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\n  /*\n  // alternative version from glfx.js\n  // this one makes more \"dusty\" look (as opposed to \"burned\")\n  \"\tvec4 color = texture2D( tDiffuse, vUv );\",\n  \"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\n  \"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n  \"\tgl_FragColor = color;\",\n  */\n  '}'].join('\\n')\n};\nexport { VignetteShader };","map":null,"metadata":{},"sourceType":"module"}
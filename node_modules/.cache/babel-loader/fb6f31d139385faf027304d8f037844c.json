{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductionDslName = exports.isBranchingProd = exports.isOptionalProd = exports.isSequenceProd = void 0;\nvar some_1 = __importDefault(require(\"lodash/some\"));\nvar every_1 = __importDefault(require(\"lodash/every\"));\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\nvar model_1 = require(\"./model\");\nfunction isSequenceProd(prod) {\n  return prod instanceof model_1.Alternative || prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionMandatory || prod instanceof model_1.RepetitionMandatoryWithSeparator || prod instanceof model_1.RepetitionWithSeparator || prod instanceof model_1.Terminal || prod instanceof model_1.Rule;\n}\nexports.isSequenceProd = isSequenceProd;\nfunction isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n  var isDirectlyOptional = prod instanceof model_1.Option || prod instanceof model_1.Repetition || prod instanceof model_1.RepetitionWithSeparator;\n  if (isDirectlyOptional) {\n    return true;\n  }\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof model_1.Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return (0, some_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof model_1.NonTerminal && (0, includes_1.default)(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof model_1.AbstractProduction) {\n    if (prod instanceof model_1.NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n    return (0, every_1.default)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\nexports.isOptionalProd = isOptionalProd;\nfunction isBranchingProd(prod) {\n  return prod instanceof model_1.Alternation;\n}\nexports.isBranchingProd = isBranchingProd;\nfunction getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof model_1.NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof model_1.Option) {\n    return \"OPTION\";\n  } else if (prod instanceof model_1.Alternation) {\n    return \"OR\";\n  } else if (prod instanceof model_1.RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof model_1.RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof model_1.RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof model_1.Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof model_1.Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\nexports.getProductionDslName = getProductionDslName;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\nfunction calcPosFromAngles(inclination, azimuth) {\n  var vector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n  var theta = Math.PI * (inclination - 0.5);\n  var phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nvar Sky = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$inclination = _ref.inclination,\n    inclination = _ref$inclination === void 0 ? 0 : _ref$inclination,\n    _ref$azimuth = _ref.azimuth,\n    azimuth = _ref$azimuth === void 0 ? 0.25 : _ref$azimuth,\n    _ref$distance = _ref.distance,\n    distance = _ref$distance === void 0 ? 100 : _ref$distance,\n    _ref$mieCoefficient = _ref.mieCoefficient,\n    mieCoefficient = _ref$mieCoefficient === void 0 ? 0.005 : _ref$mieCoefficient,\n    _ref$mieDirectionalG = _ref.mieDirectionalG,\n    mieDirectionalG = _ref$mieDirectionalG === void 0 ? 0.8 : _ref$mieDirectionalG,\n    _ref$rayleigh = _ref.rayleigh,\n    rayleigh = _ref$rayleigh === void 0 ? 1 : _ref$rayleigh,\n    _ref$turbidity = _ref.turbidity,\n    turbidity = _ref$turbidity === void 0 ? 2 : _ref$turbidity,\n    _ref$sunPosition = _ref.sunPosition,\n    sunPosition = _ref$sunPosition === void 0 ? calcPosFromAngles(inclination, azimuth) : _ref$sunPosition,\n    props = _objectWithoutProperties(_ref, [\"inclination\", \"azimuth\", \"distance\", \"mieCoefficient\", \"mieDirectionalG\", \"rayleigh\", \"turbidity\", \"sunPosition\"]);\n  var scale = React.useMemo(function () {\n    return new Vector3().setScalar(distance);\n  }, [distance]);\n  var _React$useState = React.useState(function () {\n      return new Sky$1();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    sky = _React$useState2[0];\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\nexport { Sky, calcPosFromAngles };","map":null,"metadata":{},"sourceType":"module"}
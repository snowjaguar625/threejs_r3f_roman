{"ast":null,"code":"import _classCallCheck from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport NodeLoader from './NodeLoader.js';\nimport NodeMaterialLoader from './NodeMaterialLoader.js';\nimport { ObjectLoader } from 'three';\nvar NodeObjectLoader = /*#__PURE__*/function (_ObjectLoader) {\n  _inherits(NodeObjectLoader, _ObjectLoader);\n  function NodeObjectLoader(manager) {\n    var _this;\n    _classCallCheck(this, NodeObjectLoader);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeObjectLoader).call(this, manager));\n    _this._nodesJSON = null;\n    return _this;\n  }\n  _createClass(NodeObjectLoader, [{\n    key: \"parse\",\n    value: function parse(json, onLoad) {\n      this._nodesJSON = json.nodes;\n      var data = _get(_getPrototypeOf(NodeObjectLoader.prototype), \"parse\", this).call(this, json, onLoad);\n      this._nodesJSON = null; // dispose\n\n      return data;\n    }\n  }, {\n    key: \"parseNodes\",\n    value: function parseNodes(json, textures) {\n      if (json !== undefined) {\n        var loader = new NodeLoader();\n        loader.setTextures(textures);\n        return loader.parseNodes(json);\n      }\n      return {};\n    }\n  }, {\n    key: \"parseMaterials\",\n    value: function parseMaterials(json, textures) {\n      var materials = {};\n      if (json !== undefined) {\n        var nodes = this.parseNodes(this._nodesJSON, textures);\n        var loader = new NodeMaterialLoader();\n        loader.setTextures(textures);\n        loader.setNodes(nodes);\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n          materials[data.uuid] = loader.parse(data);\n        }\n      }\n      return materials;\n    }\n  }]);\n  return NodeObjectLoader;\n}(ObjectLoader);\nexport default NodeObjectLoader;","map":null,"metadata":{},"sourceType":"module"}
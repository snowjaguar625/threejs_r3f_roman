{"ast":null,"code":"import _objectSpread from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport * as THREE from 'three';\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return /*#__PURE__*/function (_THREE$ShaderMaterial) {\n    _inherits(_class, _THREE$ShaderMaterial);\n    function _class() {\n      var _this;\n      _classCallCheck(this, _class);\n      var entries = Object.entries(uniforms); // Create unforms and shaders\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, {\n        uniforms: entries.reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            value = _ref2[1];\n          var uniform = THREE.UniformsUtils.clone(_defineProperty({}, name, {\n            value: value\n          }));\n          return _objectSpread({}, acc, uniform);\n        }, {}),\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      })); // Create getter/setters\n\n      entries.forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n          name = _ref4[0];\n        return Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), name, {\n          get: function get() {\n            return _this.uniforms[name].value;\n          },\n          set: function set(v) {\n            return _this.uniforms[name].value = v;\n          }\n        });\n      });\n      if (onInit) onInit(_assertThisInitialized(_assertThisInitialized(_this)));\n      return _this;\n    }\n    return _class;\n  }(THREE.ShaderMaterial);\n}\nexport { shaderMaterial };","map":null,"metadata":{},"sourceType":"module"}
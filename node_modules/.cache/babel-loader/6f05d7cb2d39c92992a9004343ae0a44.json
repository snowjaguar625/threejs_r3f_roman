{"ast":null,"code":"import _classCallCheck from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Object3DNode from './Object3DNode.js';\nvar CameraNode = /*#__PURE__*/function (_Object3DNode) {\n  _inherits(CameraNode, _Object3DNode);\n  function CameraNode() {\n    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n    _classCallCheck(this, CameraNode);\n    return _possibleConstructorReturn(this, _getPrototypeOf(CameraNode).call(this, scope));\n  }\n  _createClass(CameraNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType(builder) {\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        return 'mat4';\n      }\n      return _get(_getPrototypeOf(CameraNode.prototype), \"getNodeType\", this).call(this, builder);\n    }\n  }, {\n    key: \"update\",\n    value: function update(frame) {\n      var camera = frame.camera;\n      var uniformNode = this._uniformNode;\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        uniformNode.value = camera.projectionMatrix;\n      } else if (scope === CameraNode.VIEW_MATRIX) {\n        uniformNode.value = camera.matrixWorldInverse;\n      } else {\n        this.object3d = camera;\n        _get(_getPrototypeOf(CameraNode.prototype), \"update\", this).call(this, frame);\n      }\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var scope = this.scope;\n      if (scope === CameraNode.PROJECTION_MATRIX) {\n        this._uniformNode.nodeType = 'mat4';\n      }\n      return _get(_getPrototypeOf(CameraNode.prototype), \"generate\", this).call(this, builder);\n    }\n  }]);\n  return CameraNode;\n}(Object3DNode);\n_defineProperty(CameraNode, \"PROJECTION_MATRIX\", 'projectionMatrix');\nexport default CameraNode;","map":null,"metadata":{},"sourceType":"module"}
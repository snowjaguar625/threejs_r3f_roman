{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Curve, Vector3 } from 'three';\n\n/**\n * A bunch of parametric curves\n *\n * Formulas collected from various sources\n * http://mathworld.wolfram.com/HeartCurve.html\n * http://mathdl.maa.org/images/upload_library/23/stemkoski/knots/page6.html\n * http://en.wikipedia.org/wiki/Viviani%27s_curve\n * http://mathdl.maa.org/images/upload_library/23/stemkoski/knots/page4.html\n * http://www.mi.sanu.ac.rs/vismath/taylorapril2011/Taylor.pdf\n * https://prideout.net/blog/old/blog/index.html@p=44.html\n */\nvar GrannyKnot = /*#__PURE__*/function (_Curve) {\n  _inherits(GrannyKnot, _Curve);\n  function GrannyKnot() {\n    _classCallCheck(this, GrannyKnot);\n    return _possibleConstructorReturn(this, _getPrototypeOf(GrannyKnot).call(this));\n  }\n  _createClass(GrannyKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t = 2 * Math.PI * t;\n      var x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t);\n      var y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t);\n      var z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t);\n      return point.set(x, y, z).multiplyScalar(20);\n    }\n  }]);\n  return GrannyKnot;\n}(Curve); // HeartCurve\nvar HeartCurve = /*#__PURE__*/function (_Curve2) {\n  _inherits(HeartCurve, _Curve2);\n  function HeartCurve(scale) {\n    var _this;\n    _classCallCheck(this, HeartCurve);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeartCurve).call(this));\n    _this.scale = scale === undefined ? 5 : scale;\n    return _this;\n  }\n  _createClass(HeartCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t *= 2 * Math.PI;\n      var x = 16 * Math.pow(Math.sin(t), 3);\n      var y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n      var z = 0;\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return HeartCurve;\n}(Curve); // Viviani's Curve\nvar VivianiCurve = /*#__PURE__*/function (_Curve3) {\n  _inherits(VivianiCurve, _Curve3);\n  function VivianiCurve(scale) {\n    var _this2;\n    _classCallCheck(this, VivianiCurve);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(VivianiCurve).call(this));\n    _this2.scale = scale === undefined ? 70 : scale;\n    return _this2;\n  }\n  _createClass(VivianiCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t = t * 4 * Math.PI; // normalized to 0..1\n\n      var a = this.scale / 2;\n      var x = a * (1 + Math.cos(t));\n      var y = a * Math.sin(t);\n      var z = 2 * a * Math.sin(t / 2);\n      return point.set(x, y, z);\n    }\n  }]);\n  return VivianiCurve;\n}(Curve); // KnotCurve\nvar KnotCurve = /*#__PURE__*/function (_Curve4) {\n  _inherits(KnotCurve, _Curve4);\n  function KnotCurve() {\n    _classCallCheck(this, KnotCurve);\n    return _possibleConstructorReturn(this, _getPrototypeOf(KnotCurve).call(this));\n  }\n  _createClass(KnotCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t *= 2 * Math.PI;\n      var R = 10;\n      var s = 50;\n      var x = s * Math.sin(t);\n      var y = Math.cos(t) * (R + s * Math.cos(t));\n      var z = Math.sin(t) * (R + s * Math.cos(t));\n      return point.set(x, y, z);\n    }\n  }]);\n  return KnotCurve;\n}(Curve); // HelixCurve\nvar HelixCurve = /*#__PURE__*/function (_Curve5) {\n  _inherits(HelixCurve, _Curve5);\n  function HelixCurve() {\n    _classCallCheck(this, HelixCurve);\n    return _possibleConstructorReturn(this, _getPrototypeOf(HelixCurve).call(this));\n  }\n  _createClass(HelixCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var a = 30; // radius\n\n      var b = 150; // height\n\n      var t2 = 2 * Math.PI * t * b / 30;\n      var x = Math.cos(t2) * a;\n      var y = Math.sin(t2) * a;\n      var z = b * t;\n      return point.set(x, y, z);\n    }\n  }]);\n  return HelixCurve;\n}(Curve); // TrefoilKnot\nvar TrefoilKnot = /*#__PURE__*/function (_Curve6) {\n  _inherits(TrefoilKnot, _Curve6);\n  function TrefoilKnot(scale) {\n    var _this3;\n    _classCallCheck(this, TrefoilKnot);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(TrefoilKnot).call(this));\n    _this3.scale = scale === undefined ? 10 : scale;\n    return _this3;\n  }\n  _createClass(TrefoilKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t *= Math.PI * 2;\n      var x = (2 + Math.cos(3 * t)) * Math.cos(2 * t);\n      var y = (2 + Math.cos(3 * t)) * Math.sin(2 * t);\n      var z = Math.sin(3 * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return TrefoilKnot;\n}(Curve); // TorusKnot\nvar TorusKnot = /*#__PURE__*/function (_Curve7) {\n  _inherits(TorusKnot, _Curve7);\n  function TorusKnot(scale) {\n    var _this4;\n    _classCallCheck(this, TorusKnot);\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(TorusKnot).call(this));\n    _this4.scale = scale === undefined ? 10 : scale;\n    return _this4;\n  }\n  _createClass(TorusKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var p = 3;\n      var q = 4;\n      t *= Math.PI * 2;\n      var x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n      var y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n      var z = Math.sin(q * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return TorusKnot;\n}(Curve); // CinquefoilKnot\nvar CinquefoilKnot = /*#__PURE__*/function (_Curve8) {\n  _inherits(CinquefoilKnot, _Curve8);\n  function CinquefoilKnot(scale) {\n    var _this5;\n    _classCallCheck(this, CinquefoilKnot);\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(CinquefoilKnot).call(this));\n    _this5.scale = scale === undefined ? 10 : scale;\n    return _this5;\n  }\n  _createClass(CinquefoilKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var p = 2;\n      var q = 5;\n      t *= Math.PI * 2;\n      var x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n      var y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n      var z = Math.sin(q * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return CinquefoilKnot;\n}(Curve); // TrefoilPolynomialKnot\nvar TrefoilPolynomialKnot = /*#__PURE__*/function (_Curve9) {\n  _inherits(TrefoilPolynomialKnot, _Curve9);\n  function TrefoilPolynomialKnot(scale) {\n    var _this6;\n    _classCallCheck(this, TrefoilPolynomialKnot);\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(TrefoilPolynomialKnot).call(this));\n    _this6.scale = scale === undefined ? 10 : scale;\n    return _this6;\n  }\n  _createClass(TrefoilPolynomialKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t = t * 4 - 2;\n      var x = Math.pow(t, 3) - 3 * t;\n      var y = Math.pow(t, 4) - 4 * t * t;\n      var z = 1 / 5 * Math.pow(t, 5) - 2 * t;\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return TrefoilPolynomialKnot;\n}(Curve);\nvar scaleTo = function scaleTo(x, y, t) {\n  var r = y - x;\n  return t * r + x;\n}; // FigureEightPolynomialKnot\nvar FigureEightPolynomialKnot = /*#__PURE__*/function (_Curve10) {\n  _inherits(FigureEightPolynomialKnot, _Curve10);\n  function FigureEightPolynomialKnot(scale) {\n    var _this7;\n    _classCallCheck(this, FigureEightPolynomialKnot);\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(FigureEightPolynomialKnot).call(this));\n    _this7.scale = scale === undefined ? 1 : scale;\n    return _this7;\n  }\n  _createClass(FigureEightPolynomialKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t = scaleTo(-4, 4, t);\n      var x = 2 / 5 * t * (t * t - 7) * (t * t - 10);\n      var y = Math.pow(t, 4) - 13 * t * t;\n      var z = 1 / 10 * t * (t * t - 4) * (t * t - 9) * (t * t - 12);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return FigureEightPolynomialKnot;\n}(Curve); // DecoratedTorusKnot4a\nvar DecoratedTorusKnot4a = /*#__PURE__*/function (_Curve11) {\n  _inherits(DecoratedTorusKnot4a, _Curve11);\n  function DecoratedTorusKnot4a(scale) {\n    var _this8;\n    _classCallCheck(this, DecoratedTorusKnot4a);\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(DecoratedTorusKnot4a).call(this));\n    _this8.scale = scale === undefined ? 40 : scale;\n    return _this8;\n  }\n  _createClass(DecoratedTorusKnot4a, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      t *= Math.PI * 2;\n      var x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n      var y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n      var z = 0.35 * Math.sin(5 * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot4a;\n}(Curve); // DecoratedTorusKnot4b\nvar DecoratedTorusKnot4b = /*#__PURE__*/function (_Curve12) {\n  _inherits(DecoratedTorusKnot4b, _Curve12);\n  function DecoratedTorusKnot4b(scale) {\n    var _this9;\n    _classCallCheck(this, DecoratedTorusKnot4b);\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(DecoratedTorusKnot4b).call(this));\n    _this9.scale = scale === undefined ? 40 : scale;\n    return _this9;\n  }\n  _createClass(DecoratedTorusKnot4b, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var fi = t * Math.PI * 2;\n      var x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n      var y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n      var z = 0.2 * Math.sin(9 * fi);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot4b;\n}(Curve); // DecoratedTorusKnot5a\nvar DecoratedTorusKnot5a = /*#__PURE__*/function (_Curve13) {\n  _inherits(DecoratedTorusKnot5a, _Curve13);\n  function DecoratedTorusKnot5a(scale) {\n    var _this10;\n    _classCallCheck(this, DecoratedTorusKnot5a);\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(DecoratedTorusKnot5a).call(this));\n    _this10.scale = scale === undefined ? 40 : scale;\n    return _this10;\n  }\n  _createClass(DecoratedTorusKnot5a, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var fi = t * Math.PI * 2;\n      var x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n      var y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n      var z = 0.2 * Math.sin(20 * fi);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot5a;\n}(Curve); // DecoratedTorusKnot5c\nvar DecoratedTorusKnot5c = /*#__PURE__*/function (_Curve14) {\n  _inherits(DecoratedTorusKnot5c, _Curve14);\n  function DecoratedTorusKnot5c(scale) {\n    var _this11;\n    _classCallCheck(this, DecoratedTorusKnot5c);\n    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(DecoratedTorusKnot5c).call(this));\n    _this11.scale = scale === undefined ? 40 : scale;\n    return _this11;\n  }\n  _createClass(DecoratedTorusKnot5c, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var fi = t * Math.PI * 2;\n      var x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n      var y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n      var z = 0.35 * Math.sin(15 * fi);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot5c;\n}(Curve);\nexport { CinquefoilKnot, DecoratedTorusKnot4a, DecoratedTorusKnot4b, DecoratedTorusKnot5a, DecoratedTorusKnot5c, FigureEightPolynomialKnot, GrannyKnot, HeartCurve, HelixCurve, KnotCurve, TorusKnot, TrefoilKnot, TrefoilPolynomialKnot, VivianiCurve, scaleTo };","map":null,"metadata":{},"sourceType":"module"}
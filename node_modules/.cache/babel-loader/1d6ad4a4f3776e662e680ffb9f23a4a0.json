{"ast":null,"code":"import _toConsumableArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { DefaultLoadingManager } from 'three';\nimport create from 'zustand';\nvar saveLastTotalLoaded = 0;\nvar useProgress = create(function (set) {\n  DefaultLoadingManager.onStart = function (item, loaded, total) {\n    set({\n      active: true,\n      item: item,\n      loaded: loaded,\n      total: total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100\n    });\n  };\n  DefaultLoadingManager.onLoad = function () {\n    set({\n      active: false\n    });\n  };\n  DefaultLoadingManager.onError = function (item) {\n    return set(function (state) {\n      return {\n        errors: [].concat(_toConsumableArray(state.errors), [item])\n      };\n    });\n  };\n  DefaultLoadingManager.onProgress = function (item, loaded, total) {\n    if (loaded === total) {\n      saveLastTotalLoaded = total;\n    }\n    set({\n      active: true,\n      item: item,\n      loaded: loaded,\n      total: total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100\n    });\n  };\n  return {\n    errors: [],\n    active: false,\n    progress: 0,\n    item: '',\n    loaded: 0,\n    total: 0\n  };\n});\nexport { useProgress };","map":null,"metadata":{},"sourceType":"module"}
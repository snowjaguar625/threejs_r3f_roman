{"ast":null,"code":"import _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\n/**\n * Wraps children in a billboarded group. Sample usage:\n *\n * ```js\n * <Billboard>\n *   <Text>hi</Text>\n * </Billboard>\n * ```\n */\nvar Billboard = /*#__PURE__*/React.forwardRef(function Billboard(_ref, ref) {\n  var _ref$follow = _ref.follow,\n    follow = _ref$follow === void 0 ? true : _ref$follow,\n    _ref$lockX = _ref.lockX,\n    lockX = _ref$lockX === void 0 ? false : _ref$lockX,\n    _ref$lockY = _ref.lockY,\n    lockY = _ref$lockY === void 0 ? false : _ref$lockY,\n    _ref$lockZ = _ref.lockZ,\n    lockZ = _ref$lockZ === void 0 ? false : _ref$lockZ,\n    props = _objectWithoutProperties(_ref, [\"follow\", \"lockX\", \"lockY\", \"lockZ\"]);\n  var localRef = React.useRef();\n  useFrame(function (_ref2) {\n    var camera = _ref2.camera;\n    if (!follow || !localRef.current) return; // save previous rotation in case we're locking an axis\n\n    var prevRotation = localRef.current.rotation.clone(); // always face the camera\n\n    localRef.current.quaternion.copy(camera.quaternion); // readjust any axis that is locked\n\n    if (lockX) localRef.current.rotation.x = prevRotation.x;\n    if (lockY) localRef.current.rotation.y = prevRotation.y;\n    if (lockZ) localRef.current.rotation.z = prevRotation.z;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([localRef, ref])\n  }, props));\n});\nexport { Billboard };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CylinderGeometry, Matrix4 } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SpotLightMaterial } from '../materials/SpotLightMaterial.js';\nvar vec = new Vector3();\nvar SpotLight = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var depthBuffer = _ref.depthBuffer,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'white' : _ref$color,\n    _ref$distance = _ref.distance,\n    distance = _ref$distance === void 0 ? 5 : _ref$distance,\n    _ref$angle = _ref.angle,\n    angle = _ref$angle === void 0 ? 0.15 : _ref$angle,\n    _ref$attenuation = _ref.attenuation,\n    attenuation = _ref$attenuation === void 0 ? 5 : _ref$attenuation,\n    _ref$anglePower = _ref.anglePower,\n    anglePower = _ref$anglePower === void 0 ? 5 : _ref$anglePower,\n    props = _objectWithoutProperties(_ref, [\"depthBuffer\", \"color\", \"distance\", \"angle\", \"attenuation\", \"anglePower\"]);\n  var mesh = React.useRef(null);\n  var size = useThree(function (state) {\n    return state.size;\n  });\n  var camera = useThree(function (state) {\n    return state.camera;\n  });\n  var dpr = useThree(function (state) {\n    return state.viewport.dpr;\n  });\n  var _React$useState = React.useState(function () {\n      return new SpotLightMaterial();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    material = _React$useState2[0];\n  useFrame(function () {\n    material.uniforms.spotPosition.value.copy(mesh.current.getWorldPosition(vec));\n    mesh.current.lookAt(mesh.current.parent.target.position);\n  });\n  var geom = React.useMemo(function () {\n    var geometry = new CylinderGeometry(0.1, angle * 7, distance, 128, 64, true);\n    geometry.applyMatrix4(new Matrix4().makeTranslation(0, -distance / 2, 0));\n    geometry.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));\n    return geometry;\n  }, [angle, distance]);\n  return /*#__PURE__*/React.createElement(\"spotLight\", _extends({\n    ref: ref,\n    angle: angle,\n    color: color,\n    distance: distance\n  }, props), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    geometry: geom\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: material,\n    attach: \"material\",\n    \"uniforms-lightColor-value\": color,\n    \"uniforms-attenuation-value\": attenuation,\n    \"uniforms-anglePower-value\": anglePower,\n    \"uniforms-depth-value\": depthBuffer,\n    \"uniforms-cameraNear-value\": camera.near,\n    \"uniforms-cameraFar-value\": camera.far,\n    \"uniforms-resolution-value\": depthBuffer ? [size.width * dpr, size.height * dpr] : [0, 0]\n  })));\n});\nexport { SpotLight };","map":null,"metadata":{},"sourceType":"module"}
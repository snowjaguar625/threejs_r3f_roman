{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EarlyExitException = exports.NotAllInputParsedException = exports.NoViableAltException = exports.MismatchedTokenException = exports.isRecognitionException = void 0;\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\nvar MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nvar NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nvar EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nvar NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nvar RECOGNITION_EXCEPTION_NAMES = [MISMATCHED_TOKEN_EXCEPTION, NO_VIABLE_ALT_EXCEPTION, EARLY_EXIT_EXCEPTION, NOT_ALL_INPUT_PARSED_EXCEPTION];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nfunction isRecognitionException(error) {\n  // can't do instanceof on hacked custom js exceptions\n  return (0, includes_1.default)(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nexports.isRecognitionException = isRecognitionException;\nvar RecognitionException = /** @class */function (_super) {\n  __extends(RecognitionException, _super);\n  function RecognitionException(message, token) {\n    var _newTarget = this.constructor;\n    var _this = _super.call(this, message) || this;\n    _this.token = token;\n    _this.resyncedTokens = [];\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(_this, _newTarget.prototype);\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, _this.constructor);\n    }\n    return _this;\n  }\n  return RecognitionException;\n}(Error);\nvar MismatchedTokenException = /** @class */function (_super) {\n  __extends(MismatchedTokenException, _super);\n  function MismatchedTokenException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n    _this.previousToken = previousToken;\n    _this.name = MISMATCHED_TOKEN_EXCEPTION;\n    return _this;\n  }\n  return MismatchedTokenException;\n}(RecognitionException);\nexports.MismatchedTokenException = MismatchedTokenException;\nvar NoViableAltException = /** @class */function (_super) {\n  __extends(NoViableAltException, _super);\n  function NoViableAltException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n    _this.previousToken = previousToken;\n    _this.name = NO_VIABLE_ALT_EXCEPTION;\n    return _this;\n  }\n  return NoViableAltException;\n}(RecognitionException);\nexports.NoViableAltException = NoViableAltException;\nvar NotAllInputParsedException = /** @class */function (_super) {\n  __extends(NotAllInputParsedException, _super);\n  function NotAllInputParsedException(message, token) {\n    var _this = _super.call(this, message, token) || this;\n    _this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    return _this;\n  }\n  return NotAllInputParsedException;\n}(RecognitionException);\nexports.NotAllInputParsedException = NotAllInputParsedException;\nvar EarlyExitException = /** @class */function (_super) {\n  __extends(EarlyExitException, _super);\n  function EarlyExitException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n    _this.previousToken = previousToken;\n    _this.name = EARLY_EXIT_EXCEPTION;\n    return _this;\n  }\n  return EarlyExitException;\n}(RecognitionException);\nexports.EarlyExitException = EarlyExitException;","map":null,"metadata":{},"sourceType":"script"}
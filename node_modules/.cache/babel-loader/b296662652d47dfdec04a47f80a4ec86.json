{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { OrthographicCamera, PlaneGeometry, Mesh } from 'three';\nvar Pass = /*#__PURE__*/function () {\n  function Pass() {\n    _classCallCheck(this, Pass);\n    _defineProperty(this, \"enabled\", true);\n    _defineProperty(this, \"needsSwap\", true);\n    _defineProperty(this, \"clear\", false);\n    _defineProperty(this, \"renderToScreen\", false);\n  }\n  _createClass(Pass, [{\n    key: \"setSize\",\n    value: function setSize( /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /* eslint-disable no-unused-vars */\n    width, height) {}\n  }, {\n    key: \"render\",\n    value: function render( /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /* eslint-disable no-unused-vars */\n    renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n      console.error('THREE.Pass: .render() must be implemented in derived pass.');\n    }\n  }]);\n  return Pass;\n}(); // Helper for passes that need to fill the viewport with a single quad.\nvar FullScreenQuad = /*#__PURE__*/function () {\n  function FullScreenQuad(material) {\n    _classCallCheck(this, FullScreenQuad);\n    _defineProperty(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n    _defineProperty(this, \"geometry\", new PlaneGeometry(2, 2));\n    _defineProperty(this, \"mesh\", void 0);\n    this.mesh = new Mesh(this.geometry, material);\n  }\n  _createClass(FullScreenQuad, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.mesh.geometry.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.render(this.mesh, this.camera);\n    }\n  }, {\n    key: \"material\",\n    get: function get() {\n      return this.mesh.material;\n    },\n    set: function set(value) {\n      this.mesh.material = value;\n    }\n  }]);\n  return FullScreenQuad;\n}();\nexport { FullScreenQuad, Pass };","map":null,"metadata":{},"sourceType":"module"}
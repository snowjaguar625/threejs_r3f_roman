{"ast":null,"code":"import _objectSpread from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { ExtrudeGeometry } from 'three';\nvar TextGeometry = /*#__PURE__*/function (_ExtrudeGeometry) {\n  _inherits(TextGeometry, _ExtrudeGeometry);\n  function TextGeometry(text, parameters) {\n    var _this;\n    _classCallCheck(this, TextGeometry);\n    var _parameters$bevelEnab = parameters.bevelEnabled,\n      bevelEnabled = _parameters$bevelEnab === void 0 ? false : _parameters$bevelEnab,\n      _parameters$bevelSize = parameters.bevelSize,\n      bevelSize = _parameters$bevelSize === void 0 ? 8 : _parameters$bevelSize,\n      _parameters$bevelThic = parameters.bevelThickness,\n      bevelThickness = _parameters$bevelThic === void 0 ? 10 : _parameters$bevelThic,\n      font = parameters.font,\n      _parameters$height = parameters.height,\n      height = _parameters$height === void 0 ? 50 : _parameters$height,\n      _parameters$size = parameters.size,\n      size = _parameters$size === void 0 ? 100 : _parameters$size,\n      _parameters$lineHeigh = parameters.lineHeight,\n      lineHeight = _parameters$lineHeigh === void 0 ? 1 : _parameters$lineHeigh,\n      _parameters$letterSpa = parameters.letterSpacing,\n      letterSpacing = _parameters$letterSpa === void 0 ? 0 : _parameters$letterSpa,\n      rest = _objectWithoutProperties(parameters, [\"bevelEnabled\", \"bevelSize\", \"bevelThickness\", \"font\", \"height\", \"size\", \"lineHeight\", \"letterSpacing\"]);\n    var shapes = font.generateShapes(text, size, {\n      lineHeight: lineHeight,\n      letterSpacing: letterSpacing\n    });\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextGeometry).call(this, shapes, _objectSpread({}, rest, {\n      bevelEnabled: bevelEnabled,\n      bevelSize: bevelSize,\n      bevelThickness: bevelThickness,\n      depth: height\n    })));\n    _this.type = 'TextGeometry';\n    return _this;\n  }\n  return TextGeometry;\n}(ExtrudeGeometry);\nexport { TextGeometry as TextBufferGeometry, TextGeometry };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Color } from 'three';\nvar Shadow = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$fog = _ref.fog,\n    fog = _ref$fog === void 0 ? false : _ref$fog,\n    _ref$colorStop = _ref.colorStop,\n    colorStop = _ref$colorStop === void 0 ? 0.0 : _ref$colorStop,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'black' : _ref$color,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,\n    props = _objectWithoutProperties(_ref, [\"fog\", \"colorStop\", \"color\", \"opacity\"]);\n  var canvas = React.useMemo(function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    var context = canvas.getContext('2d');\n    var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    transparent: true,\n    opacity: opacity,\n    fog: fog\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\nexport { Shadow };","map":null,"metadata":{},"sourceType":"module"}
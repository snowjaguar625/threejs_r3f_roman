{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\nvar CubeTextureNode = /*#__PURE__*/function (_TextureNode) {\n  _inherits(CubeTextureNode, _TextureNode);\n  function CubeTextureNode(value) {\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new ReflectNode();\n    var biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    _classCallCheck(this, CubeTextureNode);\n    return _possibleConstructorReturn(this, _getPrototypeOf(CubeTextureNode).call(this, value, uvNode, biasNode));\n  }\n  _createClass(CubeTextureNode, [{\n    key: \"getInputType\",\n    value: function getInputType() {\n      return 'cubeTexture';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var texture = this.value;\n      if (!texture || texture.isCubeTexture !== true) {\n        throw new Error('CubeTextureNode: Need a three.js cube texture.');\n      }\n      var textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n      if (output === 'sampler') {\n        return textureProperty + '_sampler';\n      } else if (builder.isReference(output)) {\n        return textureProperty;\n      } else {\n        var nodeData = builder.getDataFromNode(this);\n        var snippet = nodeData.snippet;\n        if (snippet === undefined) {\n          var uvSnippet = this.uvNode.build(builder, 'vec3');\n          var biasNode = this.biasNode;\n          if (biasNode !== null) {\n            var biasSnippet = biasNode.build(builder, 'float');\n            snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n          } else {\n            snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n          }\n          nodeData.snippet = snippet;\n        }\n        return builder.format(snippet, 'vec4', output);\n      }\n    }\n  }]);\n  return CubeTextureNode;\n}(TextureNode);\nCubeTextureNode.prototype.isCubeTextureNode = true;\nexport default CubeTextureNode;","map":null,"metadata":{},"sourceType":"module"}
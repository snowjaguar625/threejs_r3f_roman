{"ast":null,"code":"import _objectSpread from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useThree, useFrame, context as context$1 } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nvar context = /*#__PURE__*/React.createContext(null);\nfunction useScroll() {\n  return React.useContext(context);\n}\nfunction ScrollControls(_ref) {\n  var _ref$eps = _ref.eps,\n    eps = _ref$eps === void 0 ? 0.00001 : _ref$eps,\n    infinite = _ref.infinite,\n    horizontal = _ref.horizontal,\n    _ref$pages = _ref.pages,\n    pages = _ref$pages === void 0 ? 1 : _ref$pages,\n    _ref$distance = _ref.distance,\n    distance = _ref$distance === void 0 ? 1 : _ref$distance,\n    _ref$damping = _ref.damping,\n    damping = _ref$damping === void 0 ? 4 : _ref$damping,\n    children = _ref.children;\n  var _useThree = useThree(),\n    gl = _useThree.gl,\n    size = _useThree.size,\n    invalidate = _useThree.invalidate,\n    events = _useThree.events,\n    raycaster = _useThree.raycaster;\n  var _React$useState = React.useState(function () {\n      return document.createElement('div');\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    el = _React$useState2[0];\n  var _React$useState3 = React.useState(function () {\n      return document.createElement('div');\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    fill = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return document.createElement('div');\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    fixed = _React$useState6[0];\n  var target = gl.domElement.parentNode;\n  var scroll = React.useRef(0);\n  var state = React.useMemo(function () {\n    var state = {\n      el: el,\n      eps: eps,\n      fill: fill,\n      fixed: fixed,\n      horizontal: horizontal,\n      damping: damping,\n      offset: 0,\n      delta: 0,\n      scroll: scroll,\n      pages: pages,\n      // 0 - 1 for a range between start -> start + range\n      range: function range(start, _range) {\n        var end = start + _range;\n        return this.offset < start ? 0 : this.offset > end ? 1 : (this.offset - start) / (end - start);\n      },\n      // true/false for a range between start -> start + range\n      visible: function visible(start, range) {\n        var end = start + range;\n        return this.offset >= start && this.offset <= end;\n      }\n    };\n    return state;\n  }, [eps, damping, horizontal, pages]);\n  React.useEffect(function () {\n    el.style.position = 'absolute';\n    el.style.width = '100%';\n    el.style.height = '100%';\n    el.style[horizontal ? 'overflowX' : 'overflowY'] = 'auto';\n    el.style[horizontal ? 'overflowY' : 'overflowX'] = 'hidden';\n    el.style.top = '0px';\n    el.style.left = '0px';\n    fixed.style.position = 'sticky';\n    fixed.style.top = '0px';\n    fixed.style.left = '0px';\n    fixed.style.width = '100%';\n    fixed.style.height = '100%';\n    fixed.style.overflow = 'hidden';\n    el.appendChild(fixed);\n    fill.style.height = horizontal ? '100%' : \"\".concat(pages * distance * 100, \"%\");\n    fill.style.width = horizontal ? \"\".concat(pages * distance * 100, \"%\") : '100%';\n    fill.style.pointerEvents = 'none';\n    el.appendChild(fill);\n    target.appendChild(el); // Init scroll one pixel in to allow upward/leftward scroll\n\n    el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n    var oldTarget = events.connected;\n    requestAnimationFrame(function () {\n      return events.connect == null ? void 0 : events.connect(el);\n    });\n    var oldCompute = raycaster.computeOffsets;\n    raycaster.computeOffsets = function (_ref2) {\n      var clientX = _ref2.clientX,\n        clientY = _ref2.clientY;\n      return {\n        offsetX: clientX,\n        offsetY: clientY\n      };\n    };\n    return function () {\n      target.removeChild(el);\n      raycaster.computeOffsets = oldCompute;\n      events.connect == null ? void 0 : events.connect(oldTarget);\n    };\n  }, [pages, distance, horizontal, el, fill, fixed, target]);\n  React.useEffect(function () {\n    var containerLength = size[horizontal ? 'width' : 'height'];\n    var scrollLength = el[horizontal ? 'scrollWidth' : 'scrollHeight'];\n    var scrollThreshold = scrollLength - containerLength;\n    var current = 0;\n    var disableScroll = false;\n    var onScroll = function onScroll(e) {\n      invalidate();\n      current = el[horizontal ? 'scrollLeft' : 'scrollTop'];\n      scroll.current = current / scrollThreshold;\n      if (infinite) {\n        if (!disableScroll) {\n          if (current >= scrollThreshold) {\n            var damp = 1 - state.offset;\n            el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n            scroll.current = state.offset = -damp;\n            disableScroll = true;\n          } else if (current <= 0) {\n            var _damp = 1 + state.offset;\n            el[horizontal ? 'scrollLeft' : 'scrollTop'] = scrollLength;\n            scroll.current = state.offset = _damp;\n            disableScroll = true;\n          }\n        }\n        if (disableScroll) setTimeout(function () {\n          return disableScroll = false;\n        }, 40);\n      }\n    };\n    el.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n    var onWheel = function onWheel(e) {\n      return el.scrollLeft += e.deltaY / 2;\n    };\n    if (horizontal) el.addEventListener('wheel', onWheel, {\n      passive: true\n    });\n    return function () {\n      el.removeEventListener('scroll', onScroll);\n      if (horizontal) el.removeEventListener('wheel', onWheel);\n    };\n  }, [el, size, infinite, state, invalidate, horizontal]);\n  var last = 0;\n  useFrame(function (_, delta) {\n    state.offset = THREE.MathUtils.damp(last = state.offset, scroll.current, damping, delta);\n    state.delta = THREE.MathUtils.damp(state.delta, Math.abs(last - state.offset), damping, delta);\n    if (state.delta > eps) invalidate();\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, children);\n}\nvar ScrollCanvas = /*#__PURE__*/React.forwardRef(function (_ref3, ref) {\n  var children = _ref3.children;\n  var group = React.useRef(null);\n  var state = useScroll();\n  var _useThree2 = useThree(function (state) {\n      return state.viewport;\n    }),\n    width = _useThree2.width,\n    height = _useThree2.height;\n  useFrame(function () {\n    group.current.position.x = state.horizontal ? -width * (state.pages - 1) * state.offset : 0;\n    group.current.position.y = state.horizontal ? 0 : height * (state.pages - 1) * state.offset;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: mergeRefs([ref, group])\n  }, children);\n});\nvar ScrollHtml = /*#__PURE__*/React.forwardRef(function (_ref4, ref) {\n  var children = _ref4.children,\n    style = _ref4.style,\n    props = _objectWithoutProperties(_ref4, [\"children\", \"style\"]);\n  var state = useScroll();\n  var group = React.useRef(null);\n  var _useThree3 = useThree(function (state) {\n      return state.size;\n    }),\n    width = _useThree3.width,\n    height = _useThree3.height;\n  var fiberState = React.useContext(context$1);\n  useFrame(function () {\n    if (state.delta > state.eps) {\n      group.current.style.transform = \"translate3d(\".concat(state.horizontal ? -width * (state.pages - 1) * state.offset : 0, \"px,\").concat(state.horizontal ? 0 : height * (state.pages - 1) * -state.offset, \"px,0)\");\n    }\n  });\n  ReactDOM.render( /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: mergeRefs([ref, group]),\n    style: _objectSpread({}, style, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      willChange: 'transform'\n    })\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(context$1.Provider, {\n    value: fiberState\n  }, children))), state.fixed);\n  return null;\n});\nvar Scroll = /*#__PURE__*/React.forwardRef(function (_ref5, ref) {\n  var html = _ref5.html,\n    props = _objectWithoutProperties(_ref5, [\"html\"]);\n  var El = html ? ScrollHtml : ScrollCanvas;\n  return /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref\n  }, props));\n});\nexport { Scroll, ScrollControls, useScroll };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\nfunction useAnimations(clips, root) {\n  var ref = React.useRef();\n  var _React$useState = React.useState(function () {\n      return root ? root instanceof Object3D ? {\n        current: root\n      } : root : ref;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    actualRef = _React$useState2[0]; // eslint-disable-next-line prettier/prettier\n  var _React$useState3 = React.useState(function () {\n      return new AnimationMixer(undefined);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    mixer = _React$useState4[0];\n  var lazyActions = React.useRef({});\n  var _React$useState5 = React.useState(function () {\n      var actions = {};\n      clips.forEach(function (clip) {\n        return Object.defineProperty(actions, clip.name, {\n          enumerable: true,\n          get: function get() {\n            if (actualRef.current) {\n              return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n            }\n          }\n        });\n      });\n      return {\n        ref: actualRef,\n        clips: clips,\n        actions: actions,\n        names: clips.map(function (c) {\n          return c.name;\n        }),\n        mixer: mixer\n      };\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    api = _React$useState6[0];\n  useFrame(function (state, delta) {\n    return mixer.update(delta);\n  });\n  React.useEffect(function () {\n    var currentRoot = actualRef.current;\n    return function () {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(function (action) {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clips]);\n  return api;\n}\nexport { useAnimations };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll_mid\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport ContextNode from '../core/ContextNode.js';\nimport VarNode from '../core/VarNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport { PhysicalLightingModel } from '../functions/BSDFs.js';\nimport { Vector3 } from 'three';\nvar LightContextNode = /*#__PURE__*/function (_ContextNode) {\n  _inherits(LightContextNode, _ContextNode);\n  function LightContextNode(node) {\n    _classCallCheck(this, LightContextNode);\n    return _possibleConstructorReturn(this, _getPrototypeOf(LightContextNode).call(this, node));\n  }\n  _createClass(LightContextNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return 'vec3';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var material = builder.material;\n      var lightingModel = null;\n      if (material.isMeshStandardMaterial === true) {\n        lightingModel = PhysicalLightingModel;\n      }\n      var directDiffuse = new VarNode(new UniformNode(new Vector3()), 'DirectDiffuse', 'vec3');\n      var directSpecular = new VarNode(new UniformNode(new Vector3()), 'DirectSpecular', 'vec3');\n      this.context.directDiffuse = directDiffuse;\n      this.context.directSpecular = directSpecular;\n      if (lightingModel !== null) {\n        this.context.lightingModel = lightingModel;\n      } // add code\n\n      var type = this.getNodeType(builder);\n      _get(_getPrototypeOf(LightContextNode.prototype), \"generate\", this).call(this, builder, type);\n      var totalLight = new OperatorNode('+', directDiffuse, directSpecular);\n      return totalLight.build(builder, type);\n    }\n  }]);\n  return LightContextNode;\n}(ContextNode);\nexport default LightContextNode;","map":null,"metadata":{},"sourceType":"module"}
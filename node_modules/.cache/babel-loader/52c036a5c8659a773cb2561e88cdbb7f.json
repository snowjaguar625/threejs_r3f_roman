{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { MaterialLoader } from 'three';\nvar NodeMaterialLoader = /*#__PURE__*/function (_MaterialLoader) {\n  _inherits(NodeMaterialLoader, _MaterialLoader);\n  function NodeMaterialLoader(manager) {\n    var _this;\n    _classCallCheck(this, NodeMaterialLoader);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeMaterialLoader).call(this, manager));\n    _this.nodes = {};\n    return _this;\n  }\n  _createClass(NodeMaterialLoader, [{\n    key: \"parse\",\n    value: function parse(json) {\n      var material = _get(_getPrototypeOf(NodeMaterialLoader.prototype), \"parse\", this).call(this, json);\n      var nodes = this.nodes;\n      var inputNodes = json.inputNodes;\n      for (var property in inputNodes) {\n        var uuid = inputNodes[property];\n        material[property] = nodes[uuid];\n      }\n      return material;\n    }\n  }, {\n    key: \"setNodes\",\n    value: function setNodes(value) {\n      this.nodes = value;\n      return this;\n    }\n  }]);\n  return NodeMaterialLoader;\n}(MaterialLoader);\nexport default NodeMaterialLoader;","map":null,"metadata":{},"sourceType":"module"}
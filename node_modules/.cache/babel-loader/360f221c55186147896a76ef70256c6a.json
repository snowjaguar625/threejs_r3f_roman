{"ast":null,"code":"import _classCallCheck from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport UniformNode from '../core/UniformNode.js';\nimport UVNode from './UVNode.js';\nvar TextureNode = /*#__PURE__*/function (_UniformNode) {\n  _inherits(TextureNode, _UniformNode);\n  function TextureNode(value) {\n    var _this;\n    var uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new UVNode();\n    var biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    _classCallCheck(this, TextureNode);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextureNode).call(this, value, 'vec4'));\n    _this.uvNode = uvNode;\n    _this.biasNode = biasNode;\n    return _this;\n  }\n  _createClass(TextureNode, [{\n    key: \"getUniformHash\",\n    value: function getUniformHash() {\n      return this.value.uuid;\n    }\n  }, {\n    key: \"getInputType\",\n    value: function getInputType() {\n      return 'texture';\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder, output) {\n      var texture = this.value;\n      if (!texture || texture.isTexture !== true) {\n        throw new Error('TextureNode: Need a three.js texture.');\n      }\n      var textureProperty = _get(_getPrototypeOf(TextureNode.prototype), \"generate\", this).call(this, builder, 'texture');\n      if (output === 'sampler') {\n        return textureProperty + '_sampler';\n      } else if (builder.isReference(output)) {\n        return textureProperty;\n      } else {\n        var nodeData = builder.getDataFromNode(this);\n        var snippet = nodeData.snippet;\n        if (snippet === undefined) {\n          var uvSnippet = this.uvNode.build(builder, 'vec2');\n          var biasNode = this.biasNode;\n          if (biasNode !== null) {\n            var biasSnippet = biasNode.build(builder, 'float');\n            snippet = builder.getTextureBias(textureProperty, uvSnippet, biasSnippet);\n          } else {\n            snippet = builder.getTexture(textureProperty, uvSnippet);\n          }\n          nodeData.snippet = snippet;\n        }\n        return builder.format(snippet, 'vec4', output);\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(data) {\n      _get(_getPrototypeOf(TextureNode.prototype), \"serialize\", this).call(this, data);\n      data.value = this.value.toJSON(data.meta).uuid;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data) {\n      _get(_getPrototypeOf(TextureNode.prototype), \"deserialize\", this).call(this, data);\n      this.value = data.meta.textures[data.value];\n    }\n  }]);\n  return TextureNode;\n}(UniformNode);\nTextureNode.prototype.isTextureNode = true;\nexport default TextureNode;","map":null,"metadata":{},"sourceType":"module"}
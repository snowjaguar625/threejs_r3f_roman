{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, dFdx, dFdy, cross, add, mul, max, dot, cond, inversesqrt, equal, normalize, sub, join, positionView, normalView, uv } from '../ShaderNode.js';\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// http://www.thetenthplanet.de/archives/1180\n\nvar perturbNormal2ArbNode = new ShaderNode(function (inputs) {\n  var eye_pos = inputs.eye_pos,\n    surf_norm = inputs.surf_norm,\n    mapN = inputs.mapN,\n    faceDirection = inputs.faceDirection,\n    uv = inputs.uv;\n  var q0 = dFdx(eye_pos.xyz);\n  var q1 = dFdy(eye_pos.xyz);\n  var st0 = dFdx(uv.st);\n  var st1 = dFdy(uv.st);\n  var N = surf_norm; // normalized\n\n  var q1perp = cross(q1, N);\n  var q0perp = cross(N, q0);\n  var T = add(mul(q1perp, st0.x), mul(q0perp, st1.x));\n  var B = add(mul(q1perp, st0.y), mul(q0perp, st1.y));\n  var det = max(dot(T, T), dot(B, B));\n  var scale = cond(equal(det, 0), 0, mul(faceDirection, inversesqrt(det)));\n  return normalize(add(mul(T, mul(mapN.x, scale)), mul(B, mul(mapN.y, scale)), mul(N, mapN.z)));\n});\nvar NormalMapNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(NormalMapNode, _TempNode);\n  function NormalMapNode(node) {\n    var _this;\n    var scaleNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    _classCallCheck(this, NormalMapNode);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NormalMapNode).call(this, 'vec3'));\n    _this.node = node;\n    _this.scaleNode = scaleNode;\n    _this.normalMapType = TangentSpaceNormalMap;\n    return _this;\n  }\n  _createClass(NormalMapNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var normalMapType = this.normalMapType,\n        scaleNode = this.scaleNode;\n      var normalOP = mul(this.node, 2.0);\n      var normalMap = sub(normalOP, 1.0);\n      if (scaleNode !== null) {\n        var normalMapScale = mul(normalMap.xy, scaleNode);\n        normalMap = join(normalMapScale, normalMap.z);\n      }\n      if (normalMapType === ObjectSpaceNormalMap) {\n        var vertexNormalNode = mul(new ModelNode(ModelNode.NORMAL_MATRIX), normalMap);\n        var normal = normalize(vertexNormalNode);\n        return normal.build(builder, type);\n      } else if (normalMapType === TangentSpaceNormalMap) {\n        var perturbNormal2ArbCall = perturbNormal2ArbNode({\n          eye_pos: positionView,\n          surf_norm: normalView,\n          mapN: normalMap,\n          faceDirection: 1.0,\n          uv: uv()\n        });\n        return perturbNormal2ArbCall.build(builder, type);\n      }\n    }\n  }]);\n  return NormalMapNode;\n}(TempNode);\nexport default NormalMapNode;","map":null,"metadata":{},"sourceType":"module"}
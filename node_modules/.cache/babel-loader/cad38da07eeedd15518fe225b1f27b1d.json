{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { BufferGeometry, Float32BufferAttribute } from 'three';\nvar BoxLineGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(BoxLineGeometry, _BufferGeometry);\n  function BoxLineGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    var _this;\n    _classCallCheck(this, BoxLineGeometry);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxLineGeometry).call(this));\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1;\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    var widthHalf = width / 2;\n    var heightHalf = height / 2;\n    var depthHalf = depth / 2;\n    var segmentWidth = width / widthSegments;\n    var segmentHeight = height / heightSegments;\n    var segmentDepth = depth / depthSegments;\n    var vertices = [];\n    var x = -widthHalf,\n      y = -heightHalf,\n      z = -depthHalf;\n    for (var i = 0; i <= widthSegments; i++) {\n      vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n      vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n      vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n      vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n      x += segmentWidth;\n    }\n    for (var _i = 0; _i <= heightSegments; _i++) {\n      vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n      vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n      vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n      vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n      y += segmentHeight;\n    }\n    for (var _i2 = 0; _i2 <= depthSegments; _i2++) {\n      vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n      vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n      vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n      vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n      z += segmentDepth;\n    }\n    _this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    return _this;\n  }\n  return BoxLineGeometry;\n}(BufferGeometry);\nexport { BoxLineGeometry };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Videos\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\nvar eps = 0.00001;\nfunction createShape(width, height, radius0) {\n  var shape = new Shape();\n  var radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\nvar RoundedBox = /*#__PURE__*/React.forwardRef(function RoundedBox(_ref, ref) {\n  var _ref$args = _ref.args;\n  _ref$args = _ref$args === void 0 ? [] : _ref$args;\n  var _ref$args2 = _slicedToArray(_ref$args, 3),\n    _ref$args2$ = _ref$args2[0],\n    width = _ref$args2$ === void 0 ? 1 : _ref$args2$,\n    _ref$args2$2 = _ref$args2[1],\n    height = _ref$args2$2 === void 0 ? 1 : _ref$args2$2,\n    _ref$args2$3 = _ref$args2[2],\n    depth = _ref$args2$3 === void 0 ? 1 : _ref$args2$3,\n    _ref$radius = _ref.radius,\n    radius = _ref$radius === void 0 ? 0.05 : _ref$radius,\n    _ref$smoothness = _ref.smoothness,\n    smoothness = _ref$smoothness === void 0 ? 4 : _ref$smoothness,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, [\"args\", \"radius\", \"smoothness\", \"children\"]);\n  var shape = React.useMemo(function () {\n    return createShape(width, height, radius);\n  }, [width, height, radius]);\n  var params = React.useMemo(function () {\n    return {\n      depth: depth - radius * 2,\n      bevelEnabled: true,\n      bevelSegments: smoothness * 2,\n      steps: 1,\n      bevelSize: radius - eps,\n      bevelThickness: radius,\n      curveSegments: smoothness\n    };\n  }, [depth, radius, smoothness]);\n  var geomRef = React.useRef();\n  React.useLayoutEffect(function () {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeBufferGeometry\", {\n    attach: \"geometry\",\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\nexport { RoundedBox };","map":null,"metadata":{},"sourceType":"module"}
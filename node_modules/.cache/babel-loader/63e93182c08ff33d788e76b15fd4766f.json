{"ast":null,"code":"import _slicedToArray from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"F:\\\\Train\\\\Three.js\\\\New folder\\\\infinite-scroll\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Environment } from './Environment.js';\nimport { ContactShadows } from './ContactShadows.js';\nvar presets = {\n  rembrandt: {\n    main: [1, 2, 1],\n    fill: [-2, -0.5, -2]\n  },\n  portrait: {\n    main: [-1, 2, 0.5],\n    fill: [-1, 0.5, -1.5]\n  },\n  upfront: {\n    main: [0, 2, 1],\n    fill: [-1, 0.5, -1.5]\n  },\n  soft: {\n    main: [-2, 4, 4],\n    fill: [-1, 0.5, -1.5]\n  }\n};\nfunction Stage(_ref) {\n  var children = _ref.children,\n    controls = _ref.controls,\n    _ref$shadows = _ref.shadows,\n    shadows = _ref$shadows === void 0 ? true : _ref$shadows,\n    _ref$adjustCamera = _ref.adjustCamera,\n    adjustCamera = _ref$adjustCamera === void 0 ? true : _ref$adjustCamera,\n    _ref$environment = _ref.environment,\n    environment = _ref$environment === void 0 ? 'city' : _ref$environment,\n    _ref$contactShadow = _ref.contactShadow,\n    contactShadow = _ref$contactShadow === void 0 ? true : _ref$contactShadow,\n    _ref$intensity = _ref.intensity,\n    intensity = _ref$intensity === void 0 ? 1 : _ref$intensity,\n    _ref$preset = _ref.preset,\n    preset = _ref$preset === void 0 ? 'rembrandt' : _ref$preset,\n    _ref$shadowBias = _ref.shadowBias,\n    shadowBias = _ref$shadowBias === void 0 ? 0 : _ref$shadowBias,\n    _ref$contactShadowBlu = _ref.contactShadowBlur,\n    contactShadowBlur = _ref$contactShadowBlu === void 0 ? 2 : _ref$contactShadowBlu,\n    _ref$contactShadowOpa = _ref.contactShadowOpacity,\n    contactShadowOpacity = _ref$contactShadowOpa === void 0 ? 0.5 : _ref$contactShadowOpa,\n    props = _objectWithoutProperties(_ref, [\"children\", \"controls\", \"shadows\", \"adjustCamera\", \"environment\", \"contactShadow\", \"intensity\", \"preset\", \"shadowBias\", \"contactShadowBlur\", \"contactShadowOpacity\"]);\n  var config = presets[preset];\n  var camera = useThree(function (state) {\n    return state.camera;\n  }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  var defaultControls = useThree(function (state) {\n    return state.controls;\n  });\n  var outer = React.useRef(null);\n  var inner = React.useRef(null);\n  var _React$useState = React.useState({\n      radius: 0,\n      width: 0,\n      height: 0\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    _React$useState2$ = _React$useState2[0],\n    radius = _React$useState2$.radius,\n    width = _React$useState2$.width,\n    height = _React$useState2$.height,\n    set = _React$useState2[1];\n  React.useLayoutEffect(function () {\n    outer.current.position.set(0, 0, 0);\n    outer.current.updateWorldMatrix(true, true);\n    var box3 = new THREE.Box3().setFromObject(inner.current);\n    var center = new THREE.Vector3();\n    var sphere = new THREE.Sphere();\n    var height = box3.max.y - box3.min.y;\n    var width = box3.max.x - box3.min.x;\n    box3.getCenter(center);\n    box3.getBoundingSphere(sphere);\n    set({\n      radius: sphere.radius,\n      width: width,\n      height: height\n    });\n    outer.current.position.set(-center.x, -center.y + height / 2, -center.z);\n  }, [children]);\n  React.useLayoutEffect(function () {\n    if (adjustCamera) {\n      var y = radius / (height > width ? 1.5 : 2.5);\n      camera.position.set(0, radius * 0.5, radius * 2.5);\n      camera.near = 0.1;\n      camera.far = Math.max(5000, radius * 4);\n      camera.lookAt(0, y, 0);\n      var ctrl = defaultControls || (controls == null ? void 0 : controls.current);\n      if (ctrl) {\n        ctrl.target.set(0, y, 0);\n        ctrl.update();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultControls, radius, height, width, adjustCamera]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)), contactShadow && /*#__PURE__*/React.createElement(ContactShadows, {\n    \"rotation-x\": Math.PI / 2,\n    opacity: contactShadowOpacity,\n    width: radius * 2,\n    height: radius * 2,\n    blur: contactShadowBlur,\n    far: radius / 2\n  }), environment && /*#__PURE__*/React.createElement(Environment, {\n    preset: environment\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: intensity / 3\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    penumbra: 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    intensity: intensity * 2,\n    castShadow: shadows,\n    \"shadow-bias\": shadowBias\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\n    intensity: intensity\n  }));\n}\nexport { Stage };","map":null,"metadata":{},"sourceType":"module"}